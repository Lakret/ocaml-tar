version = "%%VERSION_NUM%%"
description = "Pure OCaml library to read and write tar files"
requires = "cstruct re.str result"
archive(byte) = "tar.cma"
plugin(byte) = "tar.cma"
archive(native) = "tar.cmxa"
plugin(native) = "tar.cmxs"

package "unix" (
 version = "%%VERSION_NUM%%"
 description = "Pure OCaml library to read and write tar files"
 requires = "tar"
 archive(byte) = "tar_unix.cma"
 plugin(byte) = "tar_unix.cma"
 archive(native) = "tar_unix.cmxa"
 plugin(native) = "tar_unix.cmxs"
 exists_if = "tar_unix.cma"
)

package "lwt" (
 version = "%%VERSION_NUM%%"
 description = "Pure OCaml library to read and write tar files"
 requires = "tar lwt lwt.unix cstruct.lwt"
 archive(byte) = "tar_lwt_unix.cma"
 plugin(byte) = "tar_lwt_unix.cma"
 archive(native) = "tar_lwt_unix.cmxa"
 plugin(native) = "tar_lwt_unix.cmxs"
 exists_if = "tar_lwt_unix.cma"
)

package "mirage" (
 version = "%%VERSION_NUM%%"
 description = "Pure OCaml library to read and write tar files"
 requires = "tar lwt mirage-types-lwt mirage-block mirage-block-lwt io-page"
 archive(byte) = "tar_mirage.cma"
 plugin(byte) = "tar_mirage.cma"
 archive(native) = "tar_mirage.cmxa"
 plugin(native) = "tar_mirage.cmxs"
 exists_if = "tar_mirage.cma"
)
